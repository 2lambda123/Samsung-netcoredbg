From 36807ef3792cf299a02e96a92cb0a4618b3d584e Mon Sep 17 00:00:00 2001
From: Igor Kulaychuk <i.kulaychuk@samsung.com>
Date: Thu, 24 Aug 2017 23:56:27 +0300
Subject: [PATCH] Enable waiting for managed debugger attach

---
 NativeLauncher/dotnet.debugger                    |  9 ++++-----
 NativeLauncher/launcher/dotnet/dotnet_launcher.cc | 23 +++++++++++++++++++++++
 NativeLauncher/launcher/dotnet/dotnet_launcher.h  |  1 +
 3 files changed, 28 insertions(+), 5 deletions(-)

diff --git a/NativeLauncher/dotnet.debugger b/NativeLauncher/dotnet.debugger
index 6f57cde..c3c4ad2 100644
--- a/NativeLauncher/dotnet.debugger
+++ b/NativeLauncher/dotnet.debugger
@@ -1,6 +1,5 @@
 [DEBUGGER]
-NAME LLDB-SERVER
-EXE /home/owner/share/tmp/sdk_tools/lldb/bin/lldb-server
-APP_TYPE dotnet
-EXTRA_KEY __DLP_DEBUG_ARG__
-EXTRA_ENV CORECLR_GDBJIT
+NAME         NETCOREDBG-WAIT
+EXE          /usr/bin/dotnet-launcher
+APP_TYPE     dotnet
+EXTRA_ENV    DEBUG
diff --git a/NativeLauncher/launcher/dotnet/dotnet_launcher.cc b/NativeLauncher/launcher/dotnet/dotnet_launcher.cc
index b268357..83d4332 100644
--- a/NativeLauncher/launcher/dotnet/dotnet_launcher.cc
+++ b/NativeLauncher/launcher/dotnet/dotnet_launcher.cc
@@ -16,6 +16,7 @@
 
 
 #include <dlfcn.h>
+#include <unistd.h>
 
 #include <string>
 #include <fstream>
@@ -376,6 +377,28 @@ int CoreRuntime::launch(const char* appId, const char* root, const char* path, i
 	}
 #else
 	int st = initializeCoreClr(appId, probePath.c_str(), probePath.c_str(), tpa.c_str());
+
+	if (getenv("DEBUG"))
+	{
+		void *debuggerIsAttachedDelegate;
+		st = createDelegate(__hostHandle, __domainId,
+							"mscorlib",
+							"System.Diagnostics.Debugger",
+							"get_IsAttached", &debuggerIsAttachedDelegate);
+		if (st < 0) {
+			_ERR("Create delegate for Debugger.IsAttached property is fail (0x%08x)", st);
+			return 1;
+		}
+		DebuggerIsAttachedPtr debuggerIsAttached = reinterpret_cast<DebuggerIsAttachedPtr>(debuggerIsAttachedDelegate);
+
+		if (debuggerIsAttached == nullptr) {
+			_ERR("Cast delegate for Debugger.IsAttached property is fail");
+			return 1;
+		}
+		while (!debuggerIsAttached())
+			usleep(100 * 1000);
+	}
+
 	unsigned int ret = 0;
 	st = executeAssembly(__hostHandle, __domainId, argc, (const char**)argv, path, &ret);
 	if (st < 0)
diff --git a/NativeLauncher/launcher/dotnet/dotnet_launcher.h b/NativeLauncher/launcher/dotnet/dotnet_launcher.h
index 931846c..8b5ad7a 100644
--- a/NativeLauncher/launcher/dotnet/dotnet_launcher.h
+++ b/NativeLauncher/launcher/dotnet/dotnet_launcher.h
@@ -71,6 +71,7 @@ namespace dotnetcore {
 
 typedef void (*PreparedFunctionPtr)();
 typedef bool (*LaunchFunctionPtr)(const char* root, const char* path, int argc, char* argv[]);
+typedef bool (*DebuggerIsAttachedPtr)();
 
 class CoreRuntime : public tizen::runtime::LauncherInterface
 {
-- 
2.7.4

